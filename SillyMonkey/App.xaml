<prism:PrismApplication x:Class="SillyMonkey.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	         xmlns:prism="http://prismlibrary.com/"             
             xmlns:local="clr-namespace:SillyMonkey" >
    <Application.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Green"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Padding" Value="4,4,2,2"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Height" Value="auto"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="grid"  VerticalAlignment="Center" HorizontalAlignment="Stretch"  ClipToBounds="True" >
                                <Border x:Name="ButtonStock" BorderBrush="Gray" BorderThickness="0"/>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <!--触发器：设置选中状态符号-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter TargetName="ButtonStock" Property="BorderBrush" Value="Black"/>
                                    <Setter TargetName="ButtonStock" Property="BorderThickness" Value="0,0,0,2"/>

                                    <!--<Setter TargetName="ButtonStock" Property="Stroke" Value="Black"/>
                                    <Setter TargetName="ButtonStock" Property="StrokeThickness" Value="2"/>-->
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton" x:Key="RadioStyleBtnToggle" >
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="grid"  VerticalAlignment="Center" HorizontalAlignment="Stretch"  ClipToBounds="True" >
                                <Border x:Name="ButtonStock" BorderBrush="Gray" BorderThickness="0"/>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="ButtonStock" Property="Background" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--下拉按钮内部背景色-->
                            <Border x:Name="Back" Background="Transparent" BorderThickness="0,0,0,0">
                                <!--下拉按钮内边框-->
                                <Path Name="PathFill" Fill="Gray"  Width="10" Height="6" Margin="0,2,0,0" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PathFill" Property="Fill" Value="LightGray"></Setter>
                                    <!--<Setter TargetName="Back" Property="Background" Value="#00CA4F"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="PathFill" Property="Fill" Value="LightGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Combox-->
            <Style TargetType="ComboBox" x:Key="LineStyleComboBox">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <!--ComBoxItem-->
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="MinHeight" Value="25"></Setter>
                            <Setter Property="MinWidth" Value="20"></Setter>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" >
                                            <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" ></ContentPresenter>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                            </Trigger>
                                            <!--下拉框背景色-->
                                            <Trigger Property="IsHighlighted" Value="True">
                                                <Setter TargetName="Back" Property="Background" Value="Gray"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.7*"/>
                                    <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                                </Grid.ColumnDefinitions>
                                <!--文字区域背景和边线样式-->
                                <TextBox x:Name="selectedText" Background="Transparent"  Grid.Column="0" FontSize="12" BorderThickness="0" FontWeight="SemiBold" Padding="4,4,2,2" IsReadOnly="True" Text="{TemplateBinding Text}"></TextBox>
                                <!--<Border  Grid.Column="0" BorderThickness="1" BorderBrush="#5A5A5A" CornerRadius="1,0,0,1">
                                </Border>-->
                                <!--右侧下拉button设置-->
                                <Border Grid.Column="1" BorderBrush="#5A5A5A" CornerRadius="0,1,1,0">
                                    <ToggleButton x:Name="tgBt" BorderThickness="3" BorderBrush="#5A5A5A" Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                                </Border>
                                <!--弹出popup整体设置-->
                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="False" PopupAnimation="Slide" >
                                    <!--弹出popup边框-->
                                    <Border CornerRadius="1" BorderBrush="#5A5A5A" BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Gray" BlurRadius="2" ShadowDepth="0" Opacity="1"/>
                                        </Border.Effect>
                                        <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                                        <ScrollViewer Margin="0,0,0,0" Background="White"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderBrush="Gray" BorderThickness="2" >
                                            <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="selectedText" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="tgBt" Property="BorderBrush" Value="LightGray"/>
                                    <Setter TargetName="tgBt" Property="IsEnabled" Value="False"/>
                                    <Setter TargetName="tgBt" Property="IsChecked" Value="False"/>
                                    <Setter TargetName="Popup" Property="IsOpen" Value="False"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            
            <Style TargetType="{x:Type TextElement}">
                <Setter Property="FontFamily" Value="Consolas"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Consolas"/>
            </Style>
            <Style TargetType="{x:Type Control}">
                <Setter Property="FontFamily" Value="Consolas"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style TargetType="Window">
                <Setter Property="Icon" Value="/SillyMonkey.Core;component/Resource/icon/SA_48x48.ico"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>

<prism:PrismApplication
    x:Class="SillyMonkey.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SillyMonkey"
    xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Green" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Padding" Value="4,4,2,2" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="auto" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid
                                x:Name="grid"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                ClipToBounds="True">
                                <Border x:Name="ButtonStock" BorderBrush="Gray" BorderThickness="0" />
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <!--  触发器：设置选中状态符号  -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                    <Setter TargetName="ButtonStock" Property="BorderBrush" Value="Black" />
                                    <Setter TargetName="ButtonStock" Property="BorderThickness" Value="0,0,0,2" />

                                    <!--<Setter TargetName="ButtonStock" Property="Stroke" Value="Black"/>
                                    <Setter TargetName="ButtonStock" Property="StrokeThickness" Value="2"/>-->
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RadioStyleBtnToggle" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid
                                x:Name="grid"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                ClipToBounds="True">
                                <Border x:Name="ButtonStock" BorderBrush="Gray" BorderThickness="0" />
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="ButtonStock" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <Style x:Key="ComboxStyleBtn" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--  下拉按钮内部背景色  -->
                            <Border x:Name="Back" Background="Transparent" BorderThickness="0,0,0,0">
                                <!--  下拉按钮内边框  -->
                                <Path
                                    Name="PathFill"
                                    Width="10"
                                    Height="6"
                                    Margin="0,2,0,0"
                                    Data="M5,0 L10,10 L0,10 z"
                                    Fill="Gray"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    StrokeThickness="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PathFill" Property="Fill" Value="LightGray" />
                                    <!--<Setter TargetName="Back" Property="Background" Value="#00CA4F"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="PathFill" Property="Fill" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  Combox  -->
            <Style x:Key="LineStyleComboBox" TargetType="ComboBox">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <!--  ComBoxItem  -->
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="MinHeight" Value="25" />
                            <Setter Property="MinWidth" Value="20" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0">
                                            <ContentPresenter Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Back" Property="Background" Value="LightGray" />
                                            </Trigger>
                                            <!--  下拉框背景色  -->
                                            <Trigger Property="IsHighlighted" Value="True">
                                                <Setter TargetName="Back" Property="Background" Value="Gray" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.7*" />
                                    <ColumnDefinition Width="0.3*" MaxWidth="30" />
                                </Grid.ColumnDefinitions>
                                <!--  文字区域背景和边线样式  -->
                                <TextBox
                                    x:Name="selectedText"
                                    Grid.Column="0"
                                    Padding="4,4,2,2"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FontSize="12"
                                    FontWeight="SemiBold"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Text}" />
                                <!--<Border  Grid.Column="0" BorderThickness="1" BorderBrush="#5A5A5A" CornerRadius="1,0,0,1">
                                </Border>-->
                                <!--  右侧下拉button设置  -->
                                <Border Grid.Column="1" BorderBrush="#5A5A5A" CornerRadius="0,1,1,0">
                                    <ToggleButton
                                        x:Name="tgBt"
                                        BorderBrush="#5A5A5A"
                                        BorderThickness="3"
                                        ClickMode="Press"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ComboxStyleBtn}" />
                                </Border>
                                <!--  弹出popup整体设置  -->
                                <Popup
                                    x:Name="Popup"
                                    AllowsTransparency="False"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide">
                                    <!--  弹出popup边框  -->
                                    <Border
                                        x:Name="DropDown"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        BorderBrush="#5A5A5A"
                                        BorderThickness="1,0,1,1"
                                        CornerRadius="1"
                                        SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect
                                                BlurRadius="2"
                                                Opacity="1"
                                                ShadowDepth="0"
                                                Color="Gray" />
                                        </Border.Effect>
                                        <!--  下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"  -->
                                        <ScrollViewer
                                            Margin="0,0,0,0"
                                            Background="White"
                                            BorderBrush="Gray"
                                            BorderThickness="2"
                                            HorizontalScrollBarVisibility="Auto"
                                            SnapsToDevicePixels="True"
                                            VerticalScrollBarVisibility="Auto">
                                            <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                            <StackPanel Background="White" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="selectedText" Property="Background" Value="LightGray" />
                                    <Setter TargetName="tgBt" Property="BorderBrush" Value="LightGray" />
                                    <Setter TargetName="tgBt" Property="IsEnabled" Value="False" />
                                    <Setter TargetName="tgBt" Property="IsChecked" Value="False" />
                                    <Setter TargetName="Popup" Property="IsOpen" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style TargetType="{x:Type TextElement}">
                <Setter Property="FontFamily" Value="Consolas" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Consolas" />
            </Style>
            <Style TargetType="{x:Type Control}">
                <Setter Property="FontFamily" Value="Consolas" />
            </Style>

            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style TargetType="Window">
                <Setter Property="Icon" Value="/SillyMonkey.Core;component/Resource/icon/SA_48x48.ico" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
